import 'dart:convert' as convert;
import 'package:http/http.dart' as http;
import 'package:http/http.dart';

Future<double> getLatestPrice(String symbol) async {
  final BaseUrl =
      "https://api.binance.com/api/v3/ticker/price?symbol=${symbol}";
  double price = 0;
  final url = Uri.parse(BaseUrl);

  Response response = await http.get(url);
  if (response.statusCode == 200) {
    final jsonResponse = convert.jsonDecode(response.body);

    price = double.tryParse(jsonResponse['price'])!;
  } else {
    print('Request failed with status: ${response.statusCode}.');
  }
  return price;
}
//https://api.binance.com/api/v3/ticker/price?symbols=[%22BTCUSDT%22,%22BNBUSDT%22]

Future<List<double>> getLatestPriceForList(List<String> symbols) async {
  List<double> price = [];
  String query = "[";
  int n = symbols.length;
  for (int i = 0; i < n; i++) {
    query = query + '%22${symbols[i]}%22';
    if (i != n - 1) query = query + ',';
  }
  query += ']';
  final BaseUrl =
      "https://api.binance.com/api/v3/ticker/price?symbols=${query}";

  final url = Uri.parse(BaseUrl);

  Response response = await http.get(url);
  if (response.statusCode == 200) {
    final jsonResponse = convert.jsonDecode(response.body);

    for (var x in jsonResponse) {
      price.add(double.tryParse(x['price'])!);
    }
  } else {
    print('Request failed with status: ${response.statusCode}.');
  }
  return price;
}

// void main() async{
//
//   print(await getLatestPriceForList(["BTCUSDT","BNBUSDT"]));
// }

//
// Autogenerated({this.symbol, this.price});
//
// Autogenerated.fromJson(Map<String, dynamic> json) {
// symbol = json['symbol'];
// price = json['price'];
// }
//
// Map<String, dynamic> toJson() {
//   final Map<String, dynamic> data = new Map<String, dynamic>();
//   data['symbol'] = this.symbol;
//   data['price'] = this.price;
//   return data;
// }
